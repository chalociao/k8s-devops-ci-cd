name: CI/CD - build push deploy

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/sample-js-app

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image for test-runner
        run: docker build -t test-image:ci .

      - name: Run tests (start app + health check)
        run: |
          docker run -d --name ci-test -p 8080:8080 test-image:ci
          # wait for app and run simple health check
          for i in {1..15}; do
            if curl --fail http://localhost:8080/health; then
              echo "app healthy"
              break
            fi
            echo "waiting..."
            sleep 2
          done
          docker logs ci-test || true
          docker rm -f ci-test

  docker-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:latest
          file: docker/Dockerfile
          context: .

  deploy-to-k8s:
    needs: docker-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      - name: Set kubeconfig from secret
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Update k8s manifests with image tag
        run: |
          IMAGE=${{ env.IMAGE_NAME }}:${{ github.sha }}
          sed -i "s#YOUR_DOCKERHUB_USERNAME/sample-js-app:latest#${IMAGE}#g" k8s/deployment.yaml

      - name: Apply k8s manifests
        run: |
          kubectl apply -f k8s/secret.yaml || true
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service-clusterip.yaml
          kubectl apply -f k8s/ingress.yaml
          kubectl rollout status deployment/sample-js-app --timeout=120s
